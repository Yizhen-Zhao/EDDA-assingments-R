#Second round
summary(lm(expend~employ+bad,data=data))
summary(lm(expend~employ+crime,data=data))
#Third round
summary(lm(expend~employ+bad+crime,data=data))
#First round
summary(lm(expend~bad,data=data))
summary(lm(expend~crime,data=data))
summary(lm(expend~lawyers,data=data))
summary(lm(expend~employ,data=data))
summary(lm(expend~pop,data=data))
#Second round
summary(lm(expend~employ+bad,data=data))
summary(lm(expend~employ+crime,data=data))
#Third round
summary(lm(expend~employ+bad+crime,data=data))
#First round
summary(lm(expend~bad,data=data))
summary(lm(expend~crime,data=data))
summary(lm(expend~lawyers,data=data))
summary(lm(expend~employ,data=data))
summary(lm(expend~pop,data=data))
#Second round
summary(lm(expend~employ+bad,data=data))
summary(lm(expend~employ+crime,data=data))
#Third round
summary(lm(expend~employ+bad+crime,data=data))
#First round
summary(lm(expend~bad+crime+lawyers+employ+pop,data=data))
#Second round
summary(lm(expend~crime+lawyers+employ+pop,data=data))
summary(lm(expend~bad+lawyers+employ+pop,data=data))
summary(lm(expend~bad+crime+employ+pop,data=data))
summary(lm(expend~bad+crime+lawyers+pop,data=data))
summary(lm(expend~bad+crime+lawyers+employ,data=data))
#Without collinear variables
#First round
summary(lm(expend~bad+crime+employ,data=data))
summary(lm(expend~bad+crime+lawyers,data=data))
summary(lm(expend~bad+crime+pop,data=data))
#First round
summary(lm(expend~bad+crime+lawyers+employ+pop,data=data))
#Second round
summary(lm(expend~bad+lawyers+employ+pop,data=data))
#summary(lm(expend~crime+lawyers+employ+pop,data=data))
#summary(lm(expend~bad+lawyers+employ+pop,data=data))
#summary(lm(expend~bad+crime+employ+pop,data=data))
#summary(lm(expend~bad+crime+lawyers+pop,data=data))
#summary(lm(expend~bad+crime+lawyers+employ,data=data))
#Without collinear variables
#First round
#First round
summary(lm(expend~bad+crime+lawyers+employ+pop,data=data))
#Second round
summary(lm(expend~bad+lawyers+employ+pop,data=data))
#summary(lm(expend~crime+lawyers+employ+pop,data=data))
#summary(lm(expend~bad+lawyers+employ+pop,data=data))
#summary(lm(expend~bad+crime+employ+pop,data=data))
#summary(lm(expend~bad+crime+lawyers+pop,data=data))
#summary(lm(expend~bad+crime+lawyers+employ,data=data))
summary(lm(expend~lawyers+employ,data=data))
#Without collinear variables
#First round
summary(lm(expend~bad+crime+employ,data=data))
summary(lm(expend~bad+crime+lawyers,data=data))
summary(lm(expend~bad+crime+pop,data=data))
#First round
summary(lm(expend~bad,data=data))
summary(lm(expend~crime,data=data))
summary(lm(expend~lawyers,data=data))
summary(lm(expend~employ,data=data))
summary(lm(expend~pop,data=data))
#Second round
summary(lm(expend~employ+bad,data=data))
summary(lm(expend~employ+crime,data=data))
#Third round
summary(lm(expend~employ+bad+crime,data=data))
#First round
summary(lm(expend~bad,data=data))
summary(lm(expend~crime,data=data))
summary(lm(expend~lawyers,data=data))
summary(lm(expend~employ,data=data))
summary(lm(expend~pop,data=data))
#Second round
summary(lm(expend~employ+bad,data=data))
summary(lm(expend~employ+crime,data=data))
#Third round
#summary(lm(expend~employ+bad+crime,data=data))
#First round
#Second round
summary(lm(expend~employ+bad,data=data))
summary(lm(expend~employ+crime,data=data))
#Third round
#summary(lm(expend~employ+bad+crime,data=data))
#First round
#Third round
summary(lm(expend~employ+bad+crime,data=data))
#First round
summary(lm(expend~bad+crime+lawyers+employ+pop,data=data))
#Second round
summary(lm(expend~bad+lawyers+employ+pop,data=data))
#Without collinear variables
#First round
summary(lm(expend~bad+crime+employ,data=data))
summary(lm(expend~bad+crime+lawyers,data=data))
summary(lm(expend~bad+crime+pop,data=data))
#First round
summary(lm(expend~bad+crime+lawyers+employ+pop,data=data))
#Second round
summary(lm(expend~bad+lawyers+employ+pop,data=data))
summary(lm(expend~bad+lawyers+employ, data=data))
#Without collinear variables
#First round
summary(lm(expend~bad+crime+employ,data=data))
summary(lm(expend~bad+crime+lawyers,data=data))
summary(lm(expend~bad+crime+pop,data=data))
#First round
summary(lm(expend~bad+crime+lawyers+employ+pop,data=data))
#Second round
summary(lm(expend~bad+lawyers+employ+pop,data=data))
summary(lm(expend~bad+lawyers+employ, data=data))
summary(lm(expend~laywers+employ, data=data))
#First round
summary(lm(expend~bad+crime+lawyers+employ+pop,data=data))
#Second round
summary(lm(expend~bad+lawyers+employ+pop,data=data))
summary(lm(expend~bad+lawyers+employ, data=data))
summary(lm(expend~lawyers+employ, data=data))
#Without collinear variables
#First round
summary(lm(expend~bad+crime+employ,data=data))
summary(lm(expend~bad+crime+lawyers,data=data))
summary(lm(expend~bad+crime+pop,data=data))
#First round
summary(lm(expend~bad+crime+lawyers+employ+pop,data=data))
#Second round
#Yizhen - 2, 3, 4 round then stop
summary(lm(expend~bad+lawyers+employ+pop,data=data))
summary(lm(expend~bad+lawyers+employ, data=data))
summary(lm(expend~lawyers+employ, data=data))
#Without collinear variables
#First round
summary(lm(expend~bad+crime+employ,data=data))
summary(lm(expend~bad+crime+lawyers,data=data))
summary(lm(expend~bad+crime+pop,data=data))
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.width=8, fig.height=4)
cow = read.table("cow.txt", header = TRUE);
#There are two factors that influence the milk production
mm = subset(cow, treatment=="A")["milk"]
sf = subset(cow, treatment=="B")["milk"]
mm1 = as.numeric(unlist(mm))
sf1 = as.numeric(unlist(sf))
par(mfrow=c(1,2))
qqnorm(mm1)
qqnorm(sf1)
cow$id = factor(cow$id); cow$per = factor(cow$per)
cowanova = lm(milk~id+per+treatment,data = cow)
anova(cowanova)
summary(cowanova)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.width=8, fig.height=4)
library(lme4)
cow$order=factor(cow$order)
cowlmer = lmer(milk~treatment+order+per+(1|id), data=cow, REML = FALSE)
summary(cowlmer)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.width=8, fig.height=4)
#Permutation test
label_medic = factor(newNausea$medicine)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.width=8, fig.height=4)
nausea = read.table("nauseatable.txt", header = TRUE)
nausea
#We create a datafeam contains 2 columns: nausea, medicine
#Set patient suffered from nausea as 1, otherwise 0
nausea=c(rep(0,times=100), rep(1,times=52),rep(0, times=32), rep(1, times=35),rep(0, times=48), rep(1, times=37))
medicine=c(rep("Chlorpromazine", times=152),rep("Pentobarbital(100mg)", times=67),rep("Pentobarbital(150mg)", times=85))
newNausea = data.frame(nausea,medicine); newNausea
xtabs(~medicine+nausea, data = newNausea)
#Permutation test
label_medic = factor(newNausea$medicine)
#nausdata = data.frame(nausea=as.vector(newNausea$nausea), label_medic)
nausdata = data.frame(nausea=as.vector(as.matrix(newNausea$nausea)), label_medic)
nausdata
attach(nausdata)
mystat=function(x) sum(residuals(x)^2)
B=1000
tstar=numeric(B)
for(i in 1:B){
treatstar = sample(label_medic)
tstar[i] = mystat(lm(nausea~treatstar))
}
myt = mystat(lm(newNausea$nausea~newNausea$medicine))
hist(tstar)
myt
pl=sum(tstar<myt)/B
pr=sum(tstar>myt)/B
pl
#Permutation test
label_medic = factor(newNausea$medicine)
nausdata = data.frame(nausea=as.vector(newNausea$nausea), label_medic)
#nausdata = data.frame(nausea=as.vector(as.matrix(newNausea$nausea)), label_medic)
nausdata
attach(nausdata)
mystat=function(x) sum(residuals(x)^2)
B=1000
tstar=numeric(B)
for(i in 1:B){
treatstar = sample(label_medic)
tstar[i] = mystat(lm(nausea~treatstar))
}
myt = mystat(lm(newNausea$nausea~newNausea$medicine))
hist(tstar)
myt
pl=sum(tstar<myt)/B
pr=sum(tstar>myt)/B
pl
#Permutation test
label_medic = factor(newNausea$medicine)
nausdata = data.frame(nausea=as.vector(newNausea$nausea), label_medic)
#nausdata = data.frame(nausea=as.vector(as.matrix(newNausea$nausea)), label_medic)
nausdata
attach(nausdata)
mystat=function(x) sum(residuals(x)^2)
B=1000
tstar=numeric(B)
for(i in 1:B){
treatstar = sample(label_medic)
tstar[i] = mystat(lm(nausea~treatstar))
}
myt = mystat(lm(newNausea$nausea~newNausea$medicine))
hist(tstar)
myt
pl=sum(tstar<myt)/B
pr=sum(tstar>myt)/B
pl
#Permutation test
label_medic = factor(newNausea$medicine)
#nausdata = data.frame(nausea=as.vector(newNausea$nausea), label_medic)
nausdata = data.frame(nausea=as.vector(as.matrix(newNausea$nausea)), label_medic)
nausdata
attach(nausdata)
mystat=function(x) sum(residuals(x)^2)
B=1000
tstar=numeric(B)
for(i in 1:B){
treatstar = sample(label_medic)
tstar[i] = mystat(lm(nausea~treatstar))
}
myt = mystat(lm(newNausea$nausea~newNausea$medicine))
hist(tstar)
myt
pl=sum(tstar<myt)/B
pr=sum(tstar>myt)/B
pl
#Permutation test
label_medic = factor(newNausea$medicine)
nausdata = data.frame(nausea=as.vector(newNausea$nausea), label_medic)
attach(nausdata)
mystat=function(x) sum(residuals(x)^2)
B=1000
tstar=numeric(B)
for(i in 1:B){
treatstar = sample(label_medic)
tstar[i] = mystat(lm(nausea~treatstar))
}
myt = mystat(lm(newNausea$nausea~newNausea$medicine))
hist(tstar)
myt
pl=sum(tstar<myt)/B
pr=sum(tstar>myt)/B
pl
#chisquare test
chisq.test(xtabs(~newNausea$medicine+newNausea$nausea))[[1]]
#chisquare test
chisq.test(xtabs(~newNausea$medicine+newNausea$nausea))[[1]]
#Permutation test
label_medic = factor(newNausea$medicine)
nausdata = data.frame(nausea=as.vector(newNausea$nausea), label_medic)
attach(nausdata)
mystat=function(x) {6.624765}
B=1000
tstar=numeric(B)
for(i in 1:B){
treatstar = sample(label_medic)
tstar[i] = mystat(lm(nausea~treatstar))
}
myt = mystat(lm(newNausea$nausea~newNausea$medicine))
hist(tstar)
myt
pl=sum(tstar<myt)/B
pr=sum(tstar>myt)/B
pl
#Permutation test
label_medic = factor(newNausea$medicine)
nausdata = data.frame(nausea=as.vector(newNausea$nausea), label_medic)
attach(nausdata)
mystat=function(x) chisq.test(xtabs(~newNausea$medicine+newNausea$nausea))[[1]]
B=1000
tstar=numeric(B)
for(i in 1:B){
treatstar = sample(label_medic)
tstar[i] = mystat(lm(nausea~treatstar))
}
myt = mystat(lm(newNausea$nausea~newNausea$medicine))
hist(tstar)
myt
pl=sum(tstar<myt)/B
pr=sum(tstar>myt)/B
pl
#Permutation test
label_medic = factor(newNausea$medicine)
nausdata = data.frame(nausea=as.vector(newNausea$nausea), label_medic)
attach(nausdata)
mystat=function(x) sum(chisq.test(xtabs(~newNausea$medicine+newNausea$nausea))[[1]])
B=1000
tstar=numeric(B)
for(i in 1:B){
treatstar = sample(label_medic)
tstar[i] = mystat(lm(nausea~treatstar))
}
myt = mystat(lm(newNausea$nausea~newNausea$medicine))
hist(tstar)
myt
pl=sum(tstar<myt)/B
pr=sum(tstar>myt)/B
pl
data=read.table("nauseatable.txt",header=TRUE)
nausea=c(rep(0,times=100),rep(1,times=52),rep(0,times=32),rep(1,times=35),rep(0,times=48),
rep(1,times=37))
medicine=c(rep("Chlorpromazine",times=152),rep("Pentobarbital (100mg)",times=67),
rep("Pentobarbital (150mg)",times=85))
patientdata=data.frame(nausea,medicine)
xtabs(~medicine+nausea,data=patientdata)
data=read.table("nauseatable.txt",header=TRUE)
nausea=c(rep(0,times=100),rep(1,times=52),rep(0,times=32),rep(1,times=35),rep(0,times=48),
rep(1,times=37))
medicine=c(rep("Chlorpromazine",times=152),rep("Pentobarbital (100mg)",times=67),
rep("Pentobarbital (150mg)",times=85))
patientdata=data.frame(nausea,medicine)
xtabs(~medicine+nausea,data=patientdata)
medication=factor(patientdata$medicine)
B=1000
tstar=numeric(B)
for (i in 1:B) {
patientstar=sample(medication) # permute medicine lables
tstar[i] = chisq.test(xtabs(~patientstar+patientdata$nausea))[[1]] }
hist(tstar)
test_statistic=chisq.test(xtabs(~patientdata$medicine+patientdata$nausea))[[1]]
pl=sum(tstar<test_statistic)/B
pr=sum(tstar>test_statistic)/B
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.width=8, fig.height=4)
cowlmerTreatment = lmer(milk~order+per+(1|id), data=cow, REML = FALSE)
anova(cowlmerTreatment, cowlmer)
cowlmerOrder = lmer(milk~treatment+per+(1|id), data=cow, REML = FALSE)
anova(cowlmerOrder, cowlmer)
cowlmerPer = lmer(milk~treatment+order+(1|id), data=cow, REML = FALSE)
anova(cowlmerPer, cowlmer)
attach(cow)
t.test(milk[treatment=="A"],milk[treatment=="B"],paired=TRUE)
data=read.table("nauseatable.txt",header=TRUE)
data=read.table("nauseatable.txt",header=TRUE)
nausea=c(rep(0,times=100),rep(1,times=52),rep(0,times=32),rep(1,times=35),rep(0,times=48),
rep(1,times=37))
medicine=c(rep("Chlorpromazine",times=152),rep("Pentobarbital (100mg)",times=67),
rep("Pentobarbital (150mg)",times=85))
patientdata=data.frame(nausea,medicine)
patientdata
xtabs(~medicine+nausea,data=patientdata)
medication=factor(patientdata$medicine)
B=1000
tstar=numeric(B)
for (i in 1:B) {
patientstar=sample(medication) # permute medicine lables
tstar[i] = chisq.test(xtabs(~patientstar+patientdata$nausea))[[1]] }
hist(tstar)
test_statistic=chisq.test(xtabs(~patientdata$medicine+patientdata$nausea))[[1]]
pl=sum(tstar<test_statistic)/B
pr=sum(tstar>test_statistic)/B
chisq.test(xtabs(~patientdata$medicine+patientdata$nausea))
cow = read.table("cow.txt", header = TRUE);
#There are two factors that influence the milk production
mm = subset(cow, treatment=="A")["milk"]
sf = subset(cow, treatment=="B")["milk"]
mm1 = as.numeric(unlist(mm))
sf1 = as.numeric(unlist(sf))
par(mfrow=c(1,2))
qqnorm(mm1), qqnorm(sf1)
cow = read.table("cow.txt", header = TRUE);
#There are two factors that influence the milk production
mm = subset(cow, treatment=="A")["milk"]
sf = subset(cow, treatment=="B")["milk"]
mm1 = as.numeric(unlist(mm))
sf1 = as.numeric(unlist(sf))
par(mfrow=c(1,2))
qqnorm(mm1); qqnorm(sf1)
cow$id = factor(cow$id); cow$per = factor(cow$per)
cowanova = lm(milk~id+per+treatment,data = cow)
anova(cowanova)
summary(cowanova)
data=read.table(file="expensescrime.txt",header=TRUE)
plot(data)
par(mfrow=c(1,ncol(data)-1)) # minus the state column
for (i in 2:ncol(data)) hist(data[,i],main=names(data)[i])
par(mfrow=c(1,3))
plot(data$expend, data$bad)
plot(data$expend, data$crime)
plot(data$expend, data$lawyers)
plot(data$expend, data$employ)
plot(data$expend, data$pop)
round(cor(data[,2:7]),2)
data=read.table(file="expensescrime.txt",header=TRUE)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.width=8, fig.height=4)
data=read.table(file="expensescrime.txt",header=TRUE)
data=read.table(file="expensescrime.txt",header=TRUE)
plot(data)
par(mfrow=c(1,ncol(data)-1)) # minus the state column
for (i in 2:ncol(data)) hist(data[,i],main=names(data)[i])
par(mfrow=c(1,3))
plot(data$expend, data$bad)
plot(data$expend, data$crime)
plot(data$expend, data$lawyers)
plot(data$expend, data$employ)
plot(data$expend, data$pop)
round(cor(data[,2:7]),2)
expendlm = lm(expend~crime+employ+bad+lawyers+pop,data=data)
expendlm = lm(expend~crime+employ+bad+lawyers+pop,data=data)
vif(expendlm)
expendlm = lm(expend~crime+employ+bad+lawyers+pop,data=data)
expendlm
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.width=8, fig.height=4)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.width=8, fig.height=4)
data=read.table("nauseatable.txt",header=TRUE)
nausea=c(rep(0,times=100),rep(1,times=52),rep(0,times=32),rep(1,times=35),rep(0,times=48),
rep(1,times=37))
medicine=c(rep("Chlorpromazine",times=152),rep("Pentobarbital (100mg)",times=67),
rep("Pentobarbital (150mg)",times=85))
patientdata=data.frame(nausea,medicine)
xtabs(~medicine+nausea,data=patientdata)
medication=factor(patientdata$medicine)
B=1000
tstar=numeric(B)
for (i in 1:B) {
patientstar=sample(medication) # permute medicine lables
tstar[i] = chisq.test(xtabs(~patientstar+patientdata$nausea))[[1]] }
hist(tstar)
test_statistic=chisq.test(xtabs(~patientdata$medicine+patientdata$nausea))[[1]]
pl=sum(tstar<test_statistic)/B;pl
pr=sum(tstar>test_statistic)/B;pr
knitr::opts_chunk$set(echo = TRUE)
data=read.table(file="expensescrime.txt",header=TRUE)
plot(data)
par(mfrow=c(1,5))
plot(data$bad, data$expend,xlab="bad",ylab="expend");abline(lm(expend ~ bad, data=data))
plot(data$crime, data$expend,xlab="crime",ylab="expend");abline(lm(expend ~ crime, data=data))
plot(data$lawyers, data$expend,xlab="lawyers",ylab="expend");abline(lm(expend ~ lawyers, data=data))
plot(data$employ, data$expend,xlab="employ",ylab="expend");abline(lm(expend ~ employ, data=data))
plot(data$pop, data$expend,xlab="pop",ylab="expend");abline(lm(expend ~ pop, data=data))
knitr::opts_chunk$set(echo = TRUE)
expendlm = lm(expend~lawyers+employ,data=data)
expendlm = lm(expend~lawyers+employ,data=data)
knitr::opts_chunk$set(echo = TRUE)
data=read.table(file="expensescrime.txt",header=TRUE)
plot(data)
par(mfrow=c(1,ncol(data)-1)) # minus the state column
for (i in 2:ncol(data)) hist(data[,i],xlab=names(data)[i],main=NULL)
par(mfrow=c(1,ncol(data)-1)) # minus the state column
for (i in 2:ncol(data)) boxplot(data[,i],main=names(data)[i])
par(mfrow=c(1,5))
plot(data$bad, data$expend,xlab="bad",ylab="expend");abline(lm(expend ~ bad, data=data))
plot(data$crime, data$expend,xlab="crime",ylab="expend");abline(lm(expend ~ crime, data=data))
plot(data$lawyers, data$expend,xlab="lawyers",ylab="expend");abline(lm(expend ~ lawyers, data=data))
plot(data$employ, data$expend,xlab="employ",ylab="expend");abline(lm(expend ~ employ, data=data))
plot(data$pop, data$expend,xlab="pop",ylab="expend");abline(lm(expend ~ pop, data=data))
round(cor(data[,3:7]),2) # exclude state and expend
# Round 1
summary(lm(expend~bad,data=data))
summary(lm(expend~crime,data=data))
summary(lm(expend~lawyers,data=data))
summary(lm(expend~employ,data=data))
summary(lm(expend~pop,data=data))
# Round 2
summary(lm(expend~employ+bad,data=data))
summary(lm(expend~employ+crime,data=data))
summary(lm(expend~employ+lawyers,data=data))
summary(lm(expend~employ+pop,data=data))
# Round 3
summary(lm(expend~employ+lawyers+bad,data=data))
summary(lm(expend~employ+lawyers+crime,data=data))
summary(lm(expend~employ+lawyers+pop,data=data))
summary(lm(expend~bad+crime+lawyers+employ+pop,data=data))
summary(lm(expend~bad+lawyers+employ+pop,data=data))
summary(lm(expend~bad+lawyers+employ,data=data))
summary(lm(expend~lawyers+employ, data=data))
expendlm = lm(expend~lawyers+employ,data=data)
round(residuals(expendlm),2)
order(abs(residuals(expendlm)))
round(cooks.distance(expendlm),2)
par(mfrow=c(2,4))
plot(1:51,cooks.distance(expendlm),type="b")
plot(residuals(expendlm),data[,5],xlab="residuals",ylab="lawyers")
plot(residuals(expendlm),data[,6],xlab="residuals",ylab="employ")
plot(residuals(expendlm),data[,3],xlab="residuals",ylab="bad")
plot(residuals(expendlm),data[,4],xlab="residuals",ylab="crime")
plot(residuals(expendlm),data[,7],xlab="residuals",ylab="pop")
plot(residuals(expendlm),data[,2],xlab="residuals",ylab="expend")
plot(residuals(expendlm),fitted(expendlm),xlab="residuals",ylab="fitted model")
